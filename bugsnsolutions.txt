# Error:
    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined
    Found in Navbar.js
# Solution:
    Don't use curly braces when importing Nextjs items, particular those that come pre installed such as "Link". This is due to default exports not
    working well with default auto-imports.
    Change:
    import {Link} from "next/link" to -> import Link from "next/link"

# Error:
    Module parse failed: Unexpected character '' (1:0)
    You may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders
    (Source code omitted for this binary file)

    Trouble importing a video file, when tried to link it through public folder got gray box that didn't play video.
    Tried importing through html <Video><source src={require("path/to/video.mp4")} /></Video>, got error.
    Tried importing from top, still didn't work.

# Solution
    Had to add webpack that could process video. Altered config file and downloaded file loader. 
    https://v4.webpack.js.org/loaders/file-loader/
    https://webpack.js.org/concepts/#loaders
    https://stackoverflow.com/questions/36465127/how-to-load-a-local-video-in-react-using-webpack

    Allowed to manually import video in page.js and use it as normal.

    import Videotest from "../public/video.mp4";
    <VideoBg autoPlay loop muted src={Videotest} type="video/mp4" /> 

# Error:
    Background image would not 


# Solution:
    Had to add the ".src" to the end of the passed in prop in order to be correctly identified
    Proper component turned out to be like this

    const BgSpace = styled.div`
    width: 100%;
    height: 100%;
    background-image: ${(props) => `url(${props.$bg.src})`};
    background-size: 100% 100%;
`;

    All of this was redundant however as NextJS's Image component has features that make it simple to pass
    In background images and configure optimization.  


# Error:
    Failed to load resource: the server responded with a status of 404 favicon

# Solution:
    Add 
    <link rel="icon" href="data:;base64,iVBORw0KGgo="></link>
    To layout.js
    https://stackoverflow.com/questions/39149846/why-am-i-seeing-a-404-not-found-error-failed-to-load-favicon-ico-when-not-usin 
    Happens because even when not using a favicon, browsers look for it in the HTML. 


# Error:
    Skipping auto-scroll behavior due to `position: sticky` or `position: fixed` on element.

    This appeared on both the Navbar and the Sidebar. Appeared any time the user was redirected to the main page, either by pressing the "Demo" text in the top
    right corner or some other function. At first thought it was due to there not being a scroll option on the redirect Links to the main page but error still
    appeared. Instead the solution was to either wrap the sections in the components with this position styling in a div or wrap the entire sections in divs. 
    Chose the later option as before this the App's page.js just had empty <><> wrapping around them.
    
# Solution:
    Needed to add a wrapping div around the components causing this error. App's page.js became this
    <div>
      <Sidebar $isOpen={isOpen} toggle={toggle} />
      <Navbar toggle={toggle} />
      <HeroSection />
      <InfoSections {...homeObjOne} />
      <InfoSections {...homeObjTwo} />
      <InfoSections {...homeObjThree} />
      <InfoSections {...homeObjFour} />
      <Footer />
    </div>

    https://github.com/shadcn-ui/ui/issues/1355 